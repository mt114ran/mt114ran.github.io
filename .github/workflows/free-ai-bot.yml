name: Free AI Development Bot

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  ai-development:
    if: |
      github.event.issue.pull_request == null &&
      (startsWith(github.event.comment.body, '/ai') || startsWith(github.event.comment.body, '/gemini'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      # Option 1: Google Gemini (無料枠あり)
      - name: Use Gemini AI
        if: startsWith(github.event.comment.body, '/gemini')
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          pip install google-generativeai
          
          cat > gemini_bot.py << 'EOF'
          import os
          import google.generativeai as genai
          
          # Gemini API (無料: 60 requests/minute)
          genai.configure(api_key=os.environ['GEMINI_API_KEY'])
          model = genai.GenerativeModel('gemini-pro')
          
          instruction = os.environ['COMMENT_BODY'].replace('/gemini', '').strip()
          issue_title = os.environ['ISSUE_TITLE']
          issue_body = os.environ['ISSUE_BODY']
          
          prompt = f"""
          GitHub Issue: {issue_title}
          
          Details: {issue_body}
          
          User instruction: {instruction}
          
          Please provide code implementation.
          """
          
          response = model.generate_content(prompt)
          print(response.text)
          
          # ファイルに保存
          with open('generated_code.txt', 'w') as f:
              f.write(response.text)
          EOF
          
          python gemini_bot.py
      
      # Option 2: Hugging Face (完全無料)
      - name: Use Hugging Face Models
        if: startsWith(github.event.comment.body, '/ai')
        run: |
          pip install transformers torch
          
          cat > hf_bot.py << 'EOF'
          from transformers import pipeline
          import os
          
          # Code生成モデル（無料、ローカル実行）
          generator = pipeline(
              'text-generation', 
              model='Salesforce/codegen-350M-mono',
              device=-1  # CPU使用
          )
          
          instruction = os.environ['COMMENT_BODY'].replace('/ai', '').strip()
          
          # 簡単なコード生成
          result = generator(
              f"# {instruction}\ndef ",
              max_length=200,
              num_return_sequences=1
          )
          
          print(result[0]['generated_text'])
          
          with open('generated_code.py', 'w') as f:
              f.write(result[0]['generated_text'])
          EOF
          
          python hf_bot.py
      
      - name: Create PR
        run: |
          git config user.name "AI Bot"
          git config user.email "bot@example.com"
          
          BRANCH_NAME="ai-bot-${{ github.event.issue.number }}"
          git checkout -b $BRANCH_NAME
          
          # 生成されたコードがあれば追加
          if [ -f "generated_code.txt" ] || [ -f "generated_code.py" ]; then
            git add .
            git commit -m "AI generated code for issue #${{ github.event.issue.number }}"
            git push origin $BRANCH_NAME
            
            gh pr create \
              --title "🤖 AI Bot: ${{ github.event.issue.title }}" \
              --body "Generated by free AI models for issue #${{ github.event.issue.number }}"
          fi