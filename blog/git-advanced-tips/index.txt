1:"$Sreact.fragment"
2:I[7555,[],""]
3:I[1295,[],""]
5:I[9665,[],"MetadataBoundary"]
7:I[9665,[],"OutletBoundary"]
a:I[4911,[],"AsyncMetadataOutlet"]
c:I[9665,[],"ViewportBoundary"]
e:I[6614,[],""]
:HL["/_next/static/media/569ce4b8f30dc480-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/ddd8b2a448953f71.css","style"]
0:{"P":null,"b":"wo-uO_6EzNdXLOJeHW6-L","p":"","c":["","blog","git-advanced-tips",""],"i":false,"f":[[["",{"children":["blog",{"children":[["slug","git-advanced-tips","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/ddd8b2a448953f71.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","children":[["$","head",null,{"children":["$","link",null,{"rel":"icon","href":"/favicon.png","type":"image/png"}]}],["$","body",null,{"className":"__variable_5cfdac __variable_9a8899 antialiased","children":["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]]}]]}],{"children":["blog",["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","git-advanced-tips","d"],["$","$1","c",{"children":[null,["$","$L2",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L3",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L4",["$","$L5",null,{"children":"$L6"}],null,["$","$L7",null,{"children":["$L8","$L9",["$","$La",null,{"promise":"$@b"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","qLek_A9WBluPYnUQfpHMR",{"children":[["$","$Lc",null,{"children":"$Ld"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$e","$undefined"],"s":false,"S":true}
f:"$Sreact.suspense"
10:I[4911,[],"AsyncMetadata"]
6:["$","$f",null,{"fallback":null,"children":["$","$L10",null,{"promise":"$@11"}]}]
9:null
13:I[6874,["874","static/chunks/874-992333f59fd2c78c.js","953","static/chunks/app/blog/%5Bslug%5D/page-7639be5d959e6d48.js"],""]
12:Tcff,<h1>Git上級者向けTips集：効率的なバージョン管理</h1>
<p>日常の開発作業を効率化するGitの上級テクニックを紹介します。</p>
<h2>1. インタラクティブリベース</h2>
<p>コミット履歴を整理する強力な機能です。</p>
<pre><code class="language-bash"># 直近3つのコミットを編集
git rebase -i HEAD~3

# コミットの順序変更、結合、編集が可能
pick abc1234 First commit
squash def5678 Second commit
reword ghi9012 Third commit
</code></pre>
<h2>2. 部分的なステージング</h2>
<pre><code class="language-bash"># ファイルの一部のみをステージング
git add -p

# 各変更に対して以下のオプションを選択
# y - この変更をステージング
# n - この変更をスキップ
# s - 変更を分割
# e - 手動で編集
</code></pre>
<h2>3. bisectによるバグの特定</h2>
<pre><code class="language-bash"># bisectの開始
git bisect start
git bisect bad  # 現在のコミットはバグあり
git bisect good abc1234  # このコミットは正常

# Gitが自動的に中間のコミットをチェックアウト
# テスト後、good/badを指定していく
git bisect good  # または git bisect bad

# バグを引き起こしたコミットが特定される
</code></pre>
<h2>4. reflogで失われたコミットを復元</h2>
<pre><code class="language-bash"># 参照ログを確認
git reflog

# 失われたコミットを復元
git checkout HEAD@{2}
# または
git reset --hard HEAD@{2}
</code></pre>
<h2>5. エイリアスの活用</h2>
<p><code>.gitconfig</code>に便利なエイリアスを設定：</p>
<pre><code class="language-ini">[alias]
    st = status -s
    co = checkout
    br = branch
    cm = commit -m
    unstage = reset HEAD --
    last = log -1 HEAD
    visual = !gitk
    lg = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&#x3C;%an>%Creset'
</code></pre>
<h2>6. フックの活用</h2>
<p><code>.git/hooks/pre-commit</code>でコミット前の自動チェック：</p>
<pre><code class="language-bash">#!/bin/sh
# TypeScriptの型チェック
npm run type-check
if [ $? -ne 0 ]; then
    echo "Type check failed. Please fix errors before committing."
    exit 1
fi

# Lintチェック
npm run lint
if [ $? -ne 0 ]; then
    echo "Lint check failed. Please fix errors before committing."
    exit 1
fi
</code></pre>
<h2>7. ワークツリーの活用</h2>
<p>複数のブランチを同時に作業：</p>
<pre><code class="language-bash"># 新しいワークツリーを作成
git worktree add ../project-feature feature-branch

# ワークツリー一覧
git worktree list

# 不要になったワークツリーを削除
git worktree remove ../project-feature
</code></pre>
<h2>8. 賢いマージ戦略</h2>
<pre><code class="language-bash"># ours戦略：現在のブランチを優先
git merge -s ours other-branch

# theirs戦略：マージするブランチを優先（特定ファイルのみ）
git checkout --theirs path/to/file
git add path/to/file

# no-ffオプション：必ずマージコミットを作成
git merge --no-ff feature-branch
</code></pre>
<p>これらのテクニックをマスターすることで、より効率的で柔軟なバージョン管理が可能になります。</p>
4:["$","div",null,{"className":"max-w-2xl mx-auto py-10 px-4","children":[["$","h1",null,{"className":"text-3xl font-bold mb-2","children":"Git上級者向けTips集：効率的なバージョン管理"}],["$","ul",null,{"className":"list-none border-b border-gray-600 pb-4 mb-6","children":[["$","li",null,{"className":"text-gray-400 text-sm","children":["作成日: ","2024-04-01"]}],"$undefined",["$","li",null,{"className":"text-gray-400 text-sm","children":["タグ: ","Git, Version Control, Tips"]}]]}],["$","article",null,{"className":"prose dark:prose-invert","dangerouslySetInnerHTML":{"__html":"$12"}}],["$","nav",null,{"className":"mt-8 pt-4 border-t border-gray-700 flex justify-between","children":[["$","$L13",null,{"href":"/","className":"text-blue-400 hover:text-blue-300 hover:underline","children":"← ホームへ"}],["$","$L13",null,{"href":"/blog","className":"text-blue-400 hover:text-blue-300 hover:underline","children":"記事一覧へ →"}]]}]]}]
d:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
8:null
11:{"metadata":[["$","title","0",{"children":"Maita Tomoya Dev IO"}],["$","meta","1",{"name":"description","content":"米田智哉の技術ブログ。キャッチアップしたことをメモします。"}]],"error":null,"digest":"$undefined"}
b:{"metadata":"$11:metadata","error":null,"digest":"$undefined"}
